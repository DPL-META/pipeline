name: Custom Pipeline

on:
  push:
    branches:
      - main
      - develop

  pull_request:

  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build Docker image
        run: docker build -t ghcr.io/${{ github.repository }}/products-app:latest ./projects/products

      - name: Push image to GHCR
        run: docker push ghcr.io/${{ github.repository }}/products-app:latest
  test:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Login to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Pull image
        run: docker pull ghcr.io/${{ github.repository }}/products-app:latest

      - name: Run tests inside container
        run: docker run --rm ghcr.io/${{ github.repository }}/products-app:latest poetry run pytest
  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Login to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Pull image
        run: docker pull ghcr.io/${{ github.repository }}/products-app:latest

      - name: Simulate deploy
        run: |
          echo "ðŸ”§ Simulando deploy fictÃ­cio..."
          docker run -d -p 8000:8000 ghcr.io/${{ github.repository }}/products-app:latest
          echo "âœ… AplicaÃ§Ã£o simulada em execuÃ§Ã£o"
